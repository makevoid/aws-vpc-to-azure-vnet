{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "sshKeyData": {
      "type": "string",
      "defaultValue": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDGgkeC8d8fDaAoMavLqJZ9r5vJ+PJs51wfmQF5vfoRfOS4/CGVRdbA5KKpVmQNSQTtcGLynbQPeyqRJNo/DhxHaONIMmDBkwU4AjLUI61XE0ztKEf4iT8M5MH/bNVEZMZJ6Zsm1rWIIRVpnNd3n5kXTIwxLMY4sKBW5mgN56EfqrRlKIjBJ/MHUZ6jHd4IHq9o+1wMXp4UV1JwQXdUjrkwJLdU9/sqVB9XKK8dgrpwqkLgLlVF0TFCyu/kNc+NrfpiVd35gWUBD3kkK9su8eXVH0DGs6kQyeMA4lDa2RBZrdCxeiAD0JVIfdjrkithVHwgDMK0u2bFIR5U027Lll9n makevoid@makevoid-mbp"
    },
    "location": {
      "type": "String",
      "metadata": {
        "description": "Region where the resources will be deployed"
      },
      "defaultValue": "North Europe",
      "allowedValues": [
        "North Central US",
        "East Asia",
        "West US",
        "Central US",
        "North Europe",
        "West Europe",
        "UK West",
        "UK South"
      ]
    },
    "vpnType": {
      "type": "String",
      "metadata": {
        "description": "Route based or policy based"
      },
      "defaultValue": "RouteBased",
      "allowedValues": [
        "RouteBased",
        "PolicyBased"
      ]
    },
    "vpcGatewayName": {
      "type": "string",
      "defaultValue": "vpcGateway",
      "metadata": {
        "description": "Aribtary name for gateway resource representing AWS VPC StrongSwan Server"
      }
    },
    "vpcGatewayIpAddress": {
      "type": "string",
      "metadata": {
        "description": "Public IP of your StrongSwan Instance"
      }
    },
    "vpcAddressPrefix": {
      "type": "string",
      "metadata": {
        "description": "CIDR block representing the address space of the AWS VPC Subnet"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "azureVnet",
      "metadata": {
        "description": "Arbitrary name for the Azure Virtual Network"
      }
    },
    "azureVNetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.3.0.0/16",
      "metadata": {
        "description": "CIDR block representing the address space of the Azure VNet"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "Subnet1",
      "metadata": {
        "description": "Aribtrary name for the Azure Subnet"
      }
    },
    "subnetPrefix": {
      "type": "string",
      "metadata": {
        "description": "CIDR block for VM subnet, subset of azureVNetAddressPrefix address space"
      }
    },
    "gatewaySubnetPrefix": {
      "type": "string",
      "defaultValue": "10.3.200.0/29",
      "metadata": {
        "description": "CIDR block for gateway subnet, subsset of azureVNetAddressPrefix address space"
      }
    },
    "gatewayPublicIPName": {
      "type": "string",
      "defaultValue": "azureGatewayIP",
      "metadata": {
        "description": "Aribtary name for public IP resource used for the new azure gateway"
      }
    },
    "gatewayName": {
      "type": "string",
      "defaultValue": "azureGateway",
      "metadata": {
        "description": "Arbitrary name for the new gateway"
      }
    },
    "connectionName": {
      "type": "string",
      "defaultValue": "Azure2Aws",
      "metadata": {
        "description": "Arbitrary name for the new connection between Azure VNet and AWS VPC"
      }
    },
    "sharedKey": {
      "type": "string",
      "metadata": {
        "description": "Shared key (PSK) for IPSec tunnel"
      }
    },
    "vmName": {
      "type": "string",
      "defaultValue": "node-1",
      "metadata": {
        "description": "Name of the sample VM to create"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_A1_v2",
      "allowedValues": [
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A9",
        "Standard_A10",
        "Standard_A11",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_D14",
        "Standard_A1_v2",
        "Standard_A2_v2",
        "Standard_A3_v2"
      ],
      "metadata": {
        "description": "Size of the Virtual Machine."
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "vpn-gateway",
      "metadata": {
        "description": "Username for sample VM"
      }
    },

    "imagePublisher": {
      "type": "string",
      "defaultValue": "Canonical",
      "metadata": {
        "description": "Sample VM Image Publisher"
      }
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "UbuntuServer",
      "metadata": {
        "description": "Sample VM Image Offer"
      }
    },
    "imageSKU": {
      "type": "string",
      "defaultValue": "14.04.2-LTS",
      "metadata": {
        "description": "Sample VM Image SKU"
      }
    },
    "newStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Stoarge Account Name for VM Disk"
      }
    },
    "storageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ],
      "metadata": {
        "Description": "The type of the Storage Account created"
      },
      "defaultValue": "Standard_LRS"
    }
  },
  "variables": {
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "gatewaySubnetRef": "[concat(variables('vnetID'),'/subnets/','GatewaySubnet')]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('subnetName'))]",
    "nicName": "[concat(parameters('vmName'), '-nic')]",
    "vmStorageAccountContainerName": "vhds",
    "OSDiskName": "osDisk",
    "vmPublicIPName": "[concat(parameters('vmName'), '-publicIP')]",
    "api-version": "2015-05-01-preview"
  },
  "resources": [
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/localNetworkGateways",
      "name": "[parameters('vpcGatewayName')]",
      "location": "[parameters('location')]",
      "properties": {
        "localNetworkAddressSpace": {
          "addressPrefixes": [
            "[parameters('vpcAddressPrefix')]"
          ]
        },
        "gatewayIpAddress": "[parameters('vpcGatewayIpAddress')]"
      }
    },
    {
      "name": "[parameters('connectionName')]",
      "apiVersion":"2015-06-15",
      "type": "Microsoft.Network/connections",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworkGateways/', parameters('gatewayName'))]",
        "[concat('Microsoft.Network/localNetworkGateways/', parameters('vpcGatewayName'))]"
      ],
      "properties": {
          "virtualNetworkGateway1": {
              "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('gatewayName'))]"
          },
          "localNetworkGateway2": {
              "id": "[resourceId('Microsoft.Network/localNetworkGateways', parameters('vpcGatewayName'))]"
          },
          "connectionType": "IPsec",
          "routingWeight": 10,
          "sharedKey": "[parameters('sharedKey')]"
      }
    },
    {
      "apiVersion": "2014-12-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('azureVNetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('subnetPrefix')]"
            }
          },
          {
            "name": "GatewaySubnet",
            "properties": {
              "addressPrefix": "[parameters('gatewaySubnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2014-12-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('gatewayPublicIPName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "apiVersion": "2014-12-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('vmPublicIPName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
        "apiVersion": "[variables('api-version')]",
        "name": "[parameters('newStorageAccountName')]",
        "location": "North Europe",
        "type": "Microsoft.Storage/storageAccounts",
        "location": "[parameters('location')]",
        "properties": {
          "accountType": "[parameters('storageAccountType')]"
        }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[parameters('gatewayName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('gatewayPublicIPName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('gatewaySubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('gatewayPublicIPName'))]"
              }
            },
            "name": "vnetGatewayConfig"
          }
        ],
        "gatewayType": "Vpn",
        "vpnType": "RouteBased",
        "enableBgp": false
      }
    },
    {
      "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('vmPublicIPName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
        "[concat('Microsoft.Network/virtualNetworkGateways/', parameters('gatewayName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vmPublicIPName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computername": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "path": "/home/[parameters('adminUsername')]/.ssh/authorized_keys",
                  "keyData": "[parameters('sshKeyData')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk1",
            "vhd": {
              "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      }
    }
  ]
}
